version: "3.8"

services:
  portainer:
    image: portainer/portainer:1.24.1
    container_name: portainer
    privileged: true
    restart: always
    ports: 
      - "29000:9000"
    volumes:
      - "/data/soft/portainer/public:/public"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/data/soft/portainer/data:/data"
    networks:
      hx_net:
        ipv4_address: 11.11.11.2

  redis-test:
    image: redis:5.0.10
    container_name: redis-test
    restart: always
    command: redis-server /etc/redis/redis.conf
    ports: 
      - "16379:6379"
    volumes:
      - "/data/soft/redis-5.0.10/conf/redis.conf:/etc/redis/redis.conf"
      - "/data/soft/redis-5.0.10/data:/data"
    networks:
      hx_net:
        ipv4_address: 11.11.11.3

  mysql-test:
    image: mysql:5.7.32
    container_name: mysql-test
    restart: always
    ports: 
      - "13306:3306"
    volumes:
      - "/data/soft/mysql-5.7.32/conf:/etc/mysql"
      - "/data/soft/mysql-5.7.32/logs:/var/log/mysql"
      - "/data/soft/mysql-5.7.32/data:/var/lib/mysql"
    environment: 
       MYSQL_ROOT_PASSWORD: 'bmsoft@123'
    networks:
      hx_net:
        ipv4_address: 11.11.11.4

  rabbitmq-test:
    image: rabbitmq:3.5.4-management
    container_name: rabbitmq-test
    restart: always
    ports: 
      - "5682:5672"
      - "15682:15672"
    environment: 
      RABBITMQ_DEFAULT_USER: 'dam'
      RABBITMQ_DEFAULT_PASS: 'bmsoft@123'
    networks:
      hx_net:
        ipv4_address: 11.11.11.5
  
  zookeeper-test-single:
    image: zookeeper:3.4.10
    container_name: zookeeper-test-single
    restart: always
    ports: 
      - "12181:2181"
    volumes:
      - "/data/soft/zookeeper-3.4.10-single/conf:/conf"
      - "/data/soft/zookeeper-3.4.10-single/data/:/data/"
      - "/data/soft/zookeeper-3.4.10-single/logs/:/datalog/"
    networks:
      hx_net:
        ipv4_address: 11.11.11.6

  nginx-test:
    image: nginx:1.18.0
    container_name: nginx-test
    restart: always
    ports: 
      - "1800:80"
    volumes:
      - "/data/soft/nginx-1.18.0/html:/usr/share/nginx/html"
      - "/data/soft/nginx-1.18.0/config/nginx.conf:/etc/nginx/nginx.conf"
      - "/data/soft/nginx-1.18.0/conf.d:/etc/nginx/conf.d"
      - "/data/soft/nginx-1.18.0/cert:/etc/nginx/cert"
      - "/data/soft/nginx-1.18.0/logs:/var/log/nginx"
    networks:
      hx_net:
        ipv4_address: 11.11.11.7

  tomcat-3.5.3:
    build:
      context: ./tomcat-8.5.53
      dockerfile: Dockerfile
    image: tomcat-8.5.53-encrypt:3.5.3
    container_name: tomcat-3.5.3
    depends_on:
      - mysql-test
      - redis-test
      - zookeeper-test-single
    restart: always
    ports: 
      - "18088:8080"
    volumes:
      - "/data/product/tomcat-8.5.53-encrypt/webapps:/usr/local/tomcat-8.5.53-encrypt/webapps"
      - "/data/product/tomcat-8.5.53-encrypt/logs:/usr/local/tomcat-8.5.53-encrypt/log"
    networks:
      hx_net:
        ipv4_address: 11.11.11.11
    
  kun-metaca-collect-3.5.3:
    build:
      context: ./kun-metaca-collect
      dockerfile: Dockerfile
    image: kun-metaca-collect-encrypt:3.5.3
    container_name: kun-metaca-collect-3.5.3
    depends_on:
      - mysql-test
      - zookeeper-test-single
    restart: always
    ports: 
      - "19091:9091"
    networks:
      hx_net:
        ipv4_address: 11.11.11.12

  kun-dam-dqc-3.5.3:
    build:
      context: ./kun-dam-dqc
      dockerfile: Dockerfile
    image: kun-dam-dqc-encrypt:3.5.3
    container_name: kun-dam-dqc-3.5.3
    depends_on:
      - mysql-test
      - zookeeper-test-single
    restart: always
    ports: 
      - "19093:9092"
    networks:
      hx_net:
        ipv4_address: 11.11.11.13

  kun-dpexec-client-3.5.3:
    build:
      context: ./kun-dpexec-client
      dockerfile: Dockerfile
    image: kun-dpexec-client-encrypt:3.5.3
    container_name: kun-dpexec-client-3.5.3
    depends_on:
      - mysql-test
      - zookeeper-test-single
    restart: always
    ports: 
      - "18818:8818"
    networks:
      hx_net:
        ipv4_address: 11.11.11.14

  kun-dpexec-server-3.5.3:
    build:
      context: ./kun-dpexec-server
      dockerfile: Dockerfile
    image: kun-dpexec-server-encrypt:3.5.3
    container_name: kun-dpexec-server-3.5.3
    depends_on:
      - mysql-test
      - zookeeper-test-single
    restart: always
    ports: 
      - "18011:8011"
    networks:
      hx_net:
        ipv4_address: 11.11.11.15

  kun-job-server-deploy-4.0.0:
    build:
      context: ./kun-job-server-deploy
      dockerfile: Dockerfile
    image: kun-job-server-deploy:4.0.0
    container_name: kun-job-server-deploy-4.0.0
    depends_on:
      - mysql-test
      - rabbitmq-test
      - kun-dpexec-client-3.5.3
    restart: always
    ports: 
      - "18185:8185"
    networks:
      hx_net:
        ipv4_address: 11.11.11.16

  kun-job-agent-4.0.0:
    build:
      context: ./kun-job-agent
      dockerfile: Dockerfile
    image: kun-job-agent:4.0.0
    container_name: kun-job-agent-4.0.0
    restart: always
    networks:
      hx_net:
        ipv4_address: 11.11.11.17

networks:
  hx_net:
    driver: bridge
    ipam:
      config:
        - subnet: 11.11.11.0/24
          gateway: 11.11.11.1


